worker_processes 1;

daemon off;

events {
    worker_connections  1024;
}


# Most of the following SSL configuration is based on the ngx_http_ssl_module.
# This module makes use of the Open SSL library.
# See here for more information:
# https://nginx.org/en/docs/http/ngx_http_ssl_module.html
 
http {

  # The following global SSL configuration is usually same for all virtual servers.
  # Thus we put it into the http context -- it will apply to all servers even when you add new ones later.
 
  # supported protocol versions and cipher suites (in Open-SSL notation)
  ssl_protocols TLSv1.2;
  ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA256:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:DHE-RSA-AES128-SHA;

  # prefer strong cipher suites
  ssl_prefer_server_ciphers on;

  # use custom Diffie-Hellman parameters from a file for DHE cipher suites (use 2048 bit params, rather than the default 1024 bit)
  #ssl_dhparam test.dhparam;

  # improve HTTPS performance:
  # use connection keep-alive and session resumption (but disable session tickets for now)
  keepalive_timeout 75s;
  ssl_session_cache shared:foo-example-net:20m;
  ssl_session_timeout 10m;
  ssl_session_tickets off;
 
  # enable HSTS (HTTP Strict Transport Security)
  add_header Strict-Transport-Security "max-age=15768000; includeSubdomains;";
 
  server {
 
    # This part of the SSL configuration is usually specific to each virtual server, if multiple are present.
    # Thus we put it into the server context.
 
    # listen on the default HTTPS port and enable SSL
    listen 127.0.0.1:8443 ssl;
 
    # the server name (should match the server name in the certificate below)
    server_name localhost;
 
    # server certificate (including full certificate chain up to the root certificate)
    ssl_certificate        ./server.pem;
 
    # the corresponding private key (password protected)
    ssl_certificate_key    ./server.key;

    # enable OCSP stapling (based on the OCSP responder given in the server certificate)
    #ssl_stapling on;
    #ssl_stapling_verify on;
    #ssl_stapling_responder http://127.0.0.1:9999/;

    # enforce client certificates
    ssl_verify_client on;
    ssl_client_certificate   ./trusted-clients-cas.pem;

    # ...
    root ./public;
  }

}
