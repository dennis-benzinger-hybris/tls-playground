pid var/nginx.pid;
error_log var/logs/error.log;

worker_processes 3;
events {
    worker_connections  1024;
}

# Most of the following SSL configuration is based on the ngx_http_ssl_module.
# This module makes use of the Open SSL library.
# See here for more information:
# https://nginx.org/en/docs/http/ngx_http_ssl_module.html

http {

    #### TLS Configuration #### 

    # supported protocol versions and cipher suites (in Open-SSL notation)
    ssl_protocols TLSv1.2;
    ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:DHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers on;

    # server certificate and its private key
    ssl_certificate        tls/server.fullchain.pem;
    ssl_certificate_key    tls/private/server.key.pem;
    ssl_password_file      tls/private/server.key.pass.txt;

    # use custom Diffie-Hellman parameters from a file for DHE cipher suites (use 2048 bit params, rather than the default 1024 bit)
    #ssl_dhparam test.dhparam;

    # enable HSTS (HTTP Strict Transport Security)
    add_header Strict-Transport-Security "max-age=15768000; includeSubdomains;";

    # improve HTTPS performance:
    # use connection keep-alive and session resumption (but disable session tickets for now)
    keepalive_timeout 10s;

    # log http(s) requests to file
    access_log var/logs/access.log;

    server {
        # listen on the default HTTPS port and enable SSL
        listen ${TP_SERVER_LISTEN_ADDRESS}:${TP_SERVER_HTTPS_PORT} ssl default_server;

        # the server name (should match the server name in the certificate below)
        server_name tls-playground.${TP_SERVER_DOMAIN};

        # ...
        root public;
    }

}

